Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
                              ./main.o (__mulhi3)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o (exit)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              ./main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny2313.a(eerd_byte.o)
                              ./main.o (eeprom_read_byte)

Allocating common symbols
Common symbol       size              file

output              0xc               ./main.o
pulse               0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny2313.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x26e
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
 .progmem.data.digit_mapd
                0x0000000000000026        0x4 ./main.o
 .progmem.data.digit_mapb
                0x000000000000002a        0x4 ./main.o
                0x000000000000002e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000002e                __ctors_start = .
 *(.ctors)
                0x000000000000002e                __ctors_end = .
                0x000000000000002e                __dtors_start = .
 *(.dtors)
                0x000000000000002e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000002e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
                0x000000000000002e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000002e        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000036       0x16 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
                0x0000000000000036                __do_copy_data
 .init4         0x000000000000004c       0x10 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000004c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000005c        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
 *(.init9)
 *(.text)
 .text          0x0000000000000060        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
                0x0000000000000060                __vector_1
                0x0000000000000060                __vector_12
                0x0000000000000060                __bad_interrupt
                0x0000000000000060                __vector_3
                0x0000000000000060                __vector_11
                0x0000000000000060                __vector_13
                0x0000000000000060                __vector_17
                0x0000000000000060                __vector_7
                0x0000000000000060                __vector_5
                0x0000000000000060                __vector_4
                0x0000000000000060                __vector_9
                0x0000000000000060                __vector_2
                0x0000000000000060                __vector_15
                0x0000000000000060                __vector_8
                0x0000000000000060                __vector_14
                0x0000000000000060                __vector_10
                0x0000000000000060                __vector_16
                0x0000000000000060                __vector_18
 .text          0x0000000000000062        0x0 ./main.o
 .text          0x0000000000000062        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text          0x0000000000000062        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000000000000062        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text          0x0000000000000062        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text          0x0000000000000062        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny2313.a(eerd_byte.o)
                0x0000000000000062                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_6
                0x0000000000000062      0x136 ./main.o
                0x0000000000000062                __vector_6
 .text.seg2port
                0x0000000000000198       0x54 ./main.o
                0x0000000000000198                seg2port
 .text.startup.main
                0x00000000000001ec       0x4e ./main.o
                0x00000000000001ec                main
 .text.libgcc.mul
                0x000000000000023a       0x22 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
                0x000000000000023a                __mulhi3
 .text.libgcc.div
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc   0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.prologue
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.builtins
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.fmul
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.fixed
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .text.libgcc.mul
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000025c        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000000000000025c        0xe /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny2313.a(eerd_byte.o)
                0x000000000000025c                eeprom_read_byte
                0x000000000000026a                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000026a        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
                0x000000000000026a                exit
                0x000000000000026a                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000026a        0x4 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000026e                _etext = .

.data           0x0000000000800060        0x4 load address 0x000000000000026e
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny2313.a(eerd_byte.o)
 *(.data*)
 .data.pause    0x0000000000800060        0x1 ./main.o
                0x0000000000800060                pause
 .data.ioptr    0x0000000000800061        0x2 ./main.o
                0x0000000000800061                ioptr
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800064                . = ALIGN (0x2)
 *fill*         0x0000000000800063        0x1 
                0x0000000000800064                _edata = .
                0x0000000000800064                PROVIDE (__data_end, .)

.bss            0x0000000000800064       0x10
                0x0000000000800064                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
 .bss           0x0000000000800064        0x0 ./main.o
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_mulhi3.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_copy_data.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.9.2/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/libattiny2313.a(eerd_byte.o)
 *(.bss*)
 .bss.mode      0x0000000000800064        0x1 ./main.o
                0x0000000000800064                mode
 .bss.pos       0x0000000000800065        0x1 ./main.o
                0x0000000000800065                pos
 .bss.busy      0x0000000000800066        0x1 ./main.o
                0x0000000000800066                busy
 *(COMMON)
 COMMON         0x0000000000800067        0xd ./main.o
                0x0000000000800067                output
                0x0000000000800073                pulse
                0x0000000000800074                PROVIDE (__bss_end, .)
                0x000000000000026e                __data_load_start = LOADADDR (.data)
                0x0000000000000272                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800074        0x0
                0x0000000000800074                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800074                PROVIDE (__noinit_end, .)
                0x0000000000800074                _end = .
                0x0000000000800074                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000       0x60
 *(.eeprom*)
 .eeprom        0x0000000000810000       0x60 ./main.o
                0x0000000000810000                digit2ports
                0x0000000000810060                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./main.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr25/tiny-stack/crtattiny2313.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(TestAVR.elf elf32-avr)
LOAD linker stubs
